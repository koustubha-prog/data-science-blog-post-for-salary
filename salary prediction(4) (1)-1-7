{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\koustubhapriya\\Contacts\\New folder\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3058: DtypeWarning: Columns (3,4,5,6,12) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  interactivity=interactivity, compiler=compiler, result=result)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>EmployeeName</th>\n",
       "      <th>JobTitle</th>\n",
       "      <th>BasePay</th>\n",
       "      <th>OvertimePay</th>\n",
       "      <th>OtherPay</th>\n",
       "      <th>Benefits</th>\n",
       "      <th>TotalPay</th>\n",
       "      <th>TotalPayBenefits</th>\n",
       "      <th>Year</th>\n",
       "      <th>Notes</th>\n",
       "      <th>Agency</th>\n",
       "      <th>Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NATHANIEL FORD</td>\n",
       "      <td>GENERAL MANAGER-METROPOLITAN TRANSIT AUTHORITY</td>\n",
       "      <td>167411</td>\n",
       "      <td>0</td>\n",
       "      <td>400184</td>\n",
       "      <td>NaN</td>\n",
       "      <td>567595.43</td>\n",
       "      <td>567595.43</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>GARY JIMENEZ</td>\n",
       "      <td>CAPTAIN III (POLICE DEPARTMENT)</td>\n",
       "      <td>155966</td>\n",
       "      <td>245132</td>\n",
       "      <td>137811</td>\n",
       "      <td>NaN</td>\n",
       "      <td>538909.28</td>\n",
       "      <td>538909.28</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>ALBERT PARDINI</td>\n",
       "      <td>CAPTAIN III (POLICE DEPARTMENT)</td>\n",
       "      <td>212739</td>\n",
       "      <td>106088</td>\n",
       "      <td>16452.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>335279.91</td>\n",
       "      <td>335279.91</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>CHRISTOPHER CHONG</td>\n",
       "      <td>WIRE ROPE CABLE MAINTENANCE MECHANIC</td>\n",
       "      <td>77916</td>\n",
       "      <td>56120.7</td>\n",
       "      <td>198307</td>\n",
       "      <td>NaN</td>\n",
       "      <td>332343.61</td>\n",
       "      <td>332343.61</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>PATRICK GARDNER</td>\n",
       "      <td>DEPUTY CHIEF OF DEPARTMENT,(FIRE DEPARTMENT)</td>\n",
       "      <td>134402</td>\n",
       "      <td>9737</td>\n",
       "      <td>182235</td>\n",
       "      <td>NaN</td>\n",
       "      <td>326373.19</td>\n",
       "      <td>326373.19</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Id       EmployeeName                                        JobTitle  \\\n",
       "0   1     NATHANIEL FORD  GENERAL MANAGER-METROPOLITAN TRANSIT AUTHORITY   \n",
       "1   2       GARY JIMENEZ                 CAPTAIN III (POLICE DEPARTMENT)   \n",
       "2   3     ALBERT PARDINI                 CAPTAIN III (POLICE DEPARTMENT)   \n",
       "3   4  CHRISTOPHER CHONG            WIRE ROPE CABLE MAINTENANCE MECHANIC   \n",
       "4   5    PATRICK GARDNER    DEPUTY CHIEF OF DEPARTMENT,(FIRE DEPARTMENT)   \n",
       "\n",
       "  BasePay OvertimePay OtherPay Benefits   TotalPay  TotalPayBenefits  Year  \\\n",
       "0  167411           0   400184      NaN  567595.43         567595.43  2011   \n",
       "1  155966      245132   137811      NaN  538909.28         538909.28  2011   \n",
       "2  212739      106088  16452.6      NaN  335279.91         335279.91  2011   \n",
       "3   77916     56120.7   198307      NaN  332343.61         332343.61  2011   \n",
       "4  134402        9737   182235      NaN  326373.19         326373.19  2011   \n",
       "\n",
       "   Notes         Agency Status  \n",
       "0    NaN  San Francisco    NaN  \n",
       "1    NaN  San Francisco    NaN  \n",
       "2    NaN  San Francisco    NaN  \n",
       "3    NaN  San Francisco    NaN  \n",
       "4    NaN  San Francisco    NaN  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Business Understanding\n",
    "#Import Libraries\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "#Read CSV Data \n",
    "train_df = pd.read_csv(\"Salaries.csv\")\n",
    "train_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 148045 entries, 0 to 148653\n",
      "Data columns (total 13 columns):\n",
      "Id                  148045 non-null int64\n",
      "EmployeeName        148045 non-null object\n",
      "JobTitle            148045 non-null object\n",
      "BasePay             148045 non-null float64\n",
      "OvertimePay         148045 non-null object\n",
      "OtherPay            148045 non-null object\n",
      "Benefits            111886 non-null object\n",
      "TotalPay            148045 non-null float64\n",
      "TotalPayBenefits    148045 non-null float64\n",
      "Year                148045 non-null int64\n",
      "Notes               0 non-null float64\n",
      "Agency              148045 non-null object\n",
      "Status              38119 non-null object\n",
      "dtypes: float64(4), int64(2), object(7)\n",
      "memory usage: 20.8+ MB\n"
     ]
    }
   ],
   "source": [
    "#Data Understanding\n",
    "#we can clearly understand the data columns and types of data\n",
    "train_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Id', 'EmployeeName', 'JobTitle', 'BasePay', 'OvertimePay', 'OtherPay',\n",
       "       'Benefits', 'TotalPay', 'TotalPayBenefits', 'Year', 'Notes', 'Agency',\n",
       "       'Status'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Id                       0\n",
       "EmployeeName             0\n",
       "JobTitle                 0\n",
       "BasePay                  0\n",
       "OvertimePay              0\n",
       "OtherPay                 0\n",
       "Benefits             36159\n",
       "TotalPay                 0\n",
       "TotalPayBenefits         0\n",
       "Year                     0\n",
       "Notes               148045\n",
       "Agency                   0\n",
       "Status              109926\n",
       "dtype: int64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Data Preparing\n",
    "#Null Values if there are need to replaced with null values\n",
    " #\"\"\"Null values are dropped using method dropna if found any \"\"\n",
    "miss_data = train_df.isnull().sum()\n",
    "miss_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Id                       0\n",
       "EmployeeName             0\n",
       "JobTitle                 0\n",
       "BasePay                  0\n",
       "OvertimePay              0\n",
       "OtherPay                 0\n",
       "Benefits             36159\n",
       "TotalPay                 0\n",
       "TotalPayBenefits         0\n",
       "Year                     0\n",
       "Notes               148045\n",
       "Agency                   0\n",
       "Status              109926\n",
       "dtype: int64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# missing values\n",
    "train_df.isnull().sum()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>EmployeeName</th>\n",
       "      <th>JobTitle</th>\n",
       "      <th>BasePay</th>\n",
       "      <th>OvertimePay</th>\n",
       "      <th>OtherPay</th>\n",
       "      <th>Benefits</th>\n",
       "      <th>TotalPay</th>\n",
       "      <th>TotalPayBenefits</th>\n",
       "      <th>Year</th>\n",
       "      <th>Notes</th>\n",
       "      <th>Agency</th>\n",
       "      <th>Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2896</td>\n",
       "      <td>2897</td>\n",
       "      <td>JOHN PAYNE</td>\n",
       "      <td>MANAGER VII</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>142245</td>\n",
       "      <td>NaN</td>\n",
       "      <td>142245.22</td>\n",
       "      <td>142245.22</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3263</td>\n",
       "      <td>3264</td>\n",
       "      <td>LAWRENCE BADINER</td>\n",
       "      <td>MANAGER VI</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>138192</td>\n",
       "      <td>NaN</td>\n",
       "      <td>138191.99</td>\n",
       "      <td>138191.99</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19058</td>\n",
       "      <td>19059</td>\n",
       "      <td>PETER LEONARD</td>\n",
       "      <td>FIRE FIGHTER PARAMEDIC</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1630.2</td>\n",
       "      <td>64356</td>\n",
       "      <td>NaN</td>\n",
       "      <td>65986.23</td>\n",
       "      <td>65986.23</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20834</td>\n",
       "      <td>20835</td>\n",
       "      <td>MICHAEL COLLINS</td>\n",
       "      <td>POLICE OFFICER II</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7815.78</td>\n",
       "      <td>52820.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>60636.55</td>\n",
       "      <td>60636.55</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21658</td>\n",
       "      <td>21659</td>\n",
       "      <td>LINDA ZIMMERMAN</td>\n",
       "      <td>PUBLIC HEALTH NURSE</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>58441.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>58441.60</td>\n",
       "      <td>58441.60</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>148645</td>\n",
       "      <td>148646</td>\n",
       "      <td>Carolyn A Wilson</td>\n",
       "      <td>Human Services Technician</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>148647</td>\n",
       "      <td>148648</td>\n",
       "      <td>Joann Anderson</td>\n",
       "      <td>Communications Dispatcher 2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>148648</td>\n",
       "      <td>148649</td>\n",
       "      <td>Leon Walker</td>\n",
       "      <td>Custodian</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>148649</td>\n",
       "      <td>148650</td>\n",
       "      <td>Roy I Tillery</td>\n",
       "      <td>Custodian</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>148653</td>\n",
       "      <td>148654</td>\n",
       "      <td>Joe Lopez</td>\n",
       "      <td>Counselor, Log Cabin Ranch</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>-618.13</td>\n",
       "      <td>0</td>\n",
       "      <td>-618.13</td>\n",
       "      <td>-618.13</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1309 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Id      EmployeeName                     JobTitle  BasePay  \\\n",
       "2896      2897        JOHN PAYNE                  MANAGER VII      0.0   \n",
       "3263      3264  LAWRENCE BADINER                   MANAGER VI      0.0   \n",
       "19058    19059     PETER LEONARD       FIRE FIGHTER PARAMEDIC      0.0   \n",
       "20834    20835   MICHAEL COLLINS            POLICE OFFICER II      0.0   \n",
       "21658    21659   LINDA ZIMMERMAN          PUBLIC HEALTH NURSE      0.0   \n",
       "...        ...               ...                          ...      ...   \n",
       "148645  148646  Carolyn A Wilson    Human Services Technician      0.0   \n",
       "148647  148648    Joann Anderson  Communications Dispatcher 2      0.0   \n",
       "148648  148649       Leon Walker                    Custodian      0.0   \n",
       "148649  148650     Roy I Tillery                    Custodian      0.0   \n",
       "148653  148654         Joe Lopez   Counselor, Log Cabin Ranch      0.0   \n",
       "\n",
       "       OvertimePay OtherPay Benefits   TotalPay  TotalPayBenefits  Year  \\\n",
       "2896             0   142245      NaN  142245.22         142245.22  2011   \n",
       "3263             0   138192      NaN  138191.99         138191.99  2011   \n",
       "19058       1630.2    64356      NaN   65986.23          65986.23  2011   \n",
       "20834      7815.78  52820.8      NaN   60636.55          60636.55  2011   \n",
       "21658            0  58441.6      NaN   58441.60          58441.60  2011   \n",
       "...            ...      ...      ...        ...               ...   ...   \n",
       "148645           0        0        0       0.00              0.00  2014   \n",
       "148647           0        0        0       0.00              0.00  2014   \n",
       "148648           0        0        0       0.00              0.00  2014   \n",
       "148649           0        0        0       0.00              0.00  2014   \n",
       "148653           0  -618.13        0    -618.13           -618.13  2014   \n",
       "\n",
       "        Notes         Agency Status  \n",
       "2896      NaN  San Francisco    NaN  \n",
       "3263      NaN  San Francisco    NaN  \n",
       "19058     NaN  San Francisco    NaN  \n",
       "20834     NaN  San Francisco    NaN  \n",
       "21658     NaN  San Francisco    NaN  \n",
       "...       ...            ...    ...  \n",
       "148645    NaN  San Francisco     PT  \n",
       "148647    NaN  San Francisco     PT  \n",
       "148648    NaN  San Francisco     PT  \n",
       "148649    NaN  San Francisco     PT  \n",
       "148653    NaN  San Francisco     PT  \n",
       "\n",
       "[1309 rows x 13 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check for invalid salaries\n",
    "train_df['BasePay'] = pd.to_numeric(train_df['BasePay'], errors='coerce')\n",
    "train_df = train_df.dropna(subset=['BasePay'])\n",
    "train_df['BasePay'].astype(int)\n",
    "zer_salary = train_df['BasePay']<=0\n",
    "invalid_salary = train_df[zer_salary]\n",
    "\n",
    "invalid_salary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(146736, 13)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trai_data = train_df.drop(invalid_salary.index.tolist())\n",
    "# Check shape of new dataframe\n",
    "trai_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>EmployeeName</th>\n",
       "      <th>JobTitle</th>\n",
       "      <th>BasePay</th>\n",
       "      <th>OvertimePay</th>\n",
       "      <th>OtherPay</th>\n",
       "      <th>Benefits</th>\n",
       "      <th>TotalPay</th>\n",
       "      <th>TotalPayBenefits</th>\n",
       "      <th>Year</th>\n",
       "      <th>Notes</th>\n",
       "      <th>Agency</th>\n",
       "      <th>Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>146731</th>\n",
       "      <td>148614</td>\n",
       "      <td>Nanette M Lloyd</td>\n",
       "      <td>Special Nurse</td>\n",
       "      <td>19.97</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4.30</td>\n",
       "      <td>19.97</td>\n",
       "      <td>24.27</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146732</th>\n",
       "      <td>148617</td>\n",
       "      <td>Afakasi O Afakasi</td>\n",
       "      <td>Public Service Trainee</td>\n",
       "      <td>21.48</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.86</td>\n",
       "      <td>0.22</td>\n",
       "      <td>22.34</td>\n",
       "      <td>22.56</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146733</th>\n",
       "      <td>148618</td>\n",
       "      <td>Charles F Williams Iii</td>\n",
       "      <td>Pool Lifeguard</td>\n",
       "      <td>17.26</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4.04</td>\n",
       "      <td>17.26</td>\n",
       "      <td>21.30</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146734</th>\n",
       "      <td>148620</td>\n",
       "      <td>Ian V Cameron</td>\n",
       "      <td>IS Program Analyst-Assistant</td>\n",
       "      <td>6.04</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10.05</td>\n",
       "      <td>2.30</td>\n",
       "      <td>16.09</td>\n",
       "      <td>18.39</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146735</th>\n",
       "      <td>148621</td>\n",
       "      <td>India C Sabater</td>\n",
       "      <td>Recreation Leader</td>\n",
       "      <td>15.50</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.16</td>\n",
       "      <td>15.50</td>\n",
       "      <td>15.66</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>PT</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Id            EmployeeName                      JobTitle  BasePay  \\\n",
       "146731  148614         Nanette M Lloyd                 Special Nurse    19.97   \n",
       "146732  148617       Afakasi O Afakasi        Public Service Trainee    21.48   \n",
       "146733  148618  Charles F Williams Iii                Pool Lifeguard    17.26   \n",
       "146734  148620           Ian V Cameron  IS Program Analyst-Assistant     6.04   \n",
       "146735  148621         India C Sabater             Recreation Leader    15.50   \n",
       "\n",
       "       OvertimePay OtherPay Benefits  TotalPay  TotalPayBenefits  Year  Notes  \\\n",
       "146731        0.00     0.00     4.30     19.97             24.27  2014    NaN   \n",
       "146732        0.00     0.86     0.22     22.34             22.56  2014    NaN   \n",
       "146733        0.00     0.00     4.04     17.26             21.30  2014    NaN   \n",
       "146734        0.00    10.05     2.30     16.09             18.39  2014    NaN   \n",
       "146735        0.00     0.00     0.16     15.50             15.66  2014    NaN   \n",
       "\n",
       "               Agency Status  \n",
       "146731  San Francisco     PT  \n",
       "146732  San Francisco     PT  \n",
       "146733  San Francisco     PT  \n",
       "146734  San Francisco     PT  \n",
       "146735  San Francisco     PT  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Reset index numbers\n",
    "trai_data.reset_index(drop=True, inplace=True)\n",
    "# View last 5 rows to verify index is reset\n",
    "trai_data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1530f83cdd8>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_df['BasePay'].plot(legend=True, figsize=(10,4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "from copy import deepcopy\n",
    "all_years_data_drop_outliers = deepcopy(train_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1530fb1fda0>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "all_years_data_drop_outliers.BasePay.hist(bins=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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Gz179uSZZ56huLiY4uLio65xjdQ5lszdj2kHcvIbOHCgr169OtZhiIiIiIhUa9OmTfTu3TvWYZzUavqMzWyNuw+srQ1dgyoiIiIiIiJxQQmqiIiIiIiIxAUlqCIiIiIiIhIXlKCKiIiIiIhIXFCCKiIiIiIiInFBCaqIiIiIiIjEBSWoIiIiIiIiEheUoIqIiIiIiEhcUIIqIiIiIiIicUEJqoiIiIiIiMSFVrEOQEREREREJFZSH0o97n0WTiysV/2ZM2eSl5fHu+++i7tz/vnnc/fddzNixIgK9VatWsXtt9/O2rVr6dixIzfffDPTp0+nZcuWABw6dIgJEyZQVFTEhg0b6NGjB1u2bKnQxsGDB7nuuut4++232bNnD+3bt+eSSy4hKyuLPn36NG7H60AjqCIiIiIiInFs+fLljBs3joKCAlatWsWgQYMYNWoUhYVHEt2dOyjOE7sAABbJSURBVHcybNgwUlJSWLNmDTk5OeTm5jJ16tTyOocPHyYhIYH09HTGjBlTZV9mxrBhw3jmmWfYvHkzL7zwAv/617+44oorOHTo0DHfV42gioiIiIiIxLEXX3yxwnJ2djZLliwhLy+P1NRgBDgnJ4d27doxd+5cWrRoQd++fdm1axdTpkwhMzOT5ORkkpOTyc3NBWD37t2sXLnyqL7atGnDbbfdVr581llnMWPGDPr168fmzZu58MILj+GeagRVRERERETkhFJWVsb+/fvp1KlTeVlhYSHDhw+nRYsjKd6IESM4cOAA69ata3Bf+/fv57HHHuPMM8+kV69ejYq7LpSgioiIiIiInECysrLYu3cvY8eOLS8rLi6mS5cuFepFlouLi+vdxx133EHbtm1p164dL730EitWrCApKalxgdeBElQREREREZETxJw5c8jKymLhwoV069atxrpmVuFvfUyePJl169ZRUFDAueeey+jRo9m/f3+DYq4PJagiIiIiIiIngOzsbCZPnkx+fj5Dhw6tsK5r166UlJRUKIssVx5ZrYtOnTrRq1cvhgwZQl5eHtu3b+fpp59uePB1pARVREREREQkzk2bNo17772XRYsWHZWcAqSmprJs2TLKysrKyxYvXkxSUhL9+/dvdP/uzmeffdbodmqju/iKiIiIiIjEsUmTJpGbm8v8+fNJSUkpHxlNTEykffv2AEyYMIHZs2czfvx4MjIy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\n",
      "text/plain": [
       "<Figure size 1008x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Figure 1 — Percentage of use of programming languages among all the cited programming \n",
    "# languages by the respondents.\n",
    "\n",
    "plt.figure(figsize=(14,8))\n",
    "sns.barplot(x = 'TotalPayBenefits', \n",
    "            y = 'EmployeeName',\n",
    "            hue = 'Year',\n",
    "            data = top10_chart.sort_values(by='TotalPayBenefits', ascending=False))\n",
    "\n",
    "plt.xlabel(\"TotalPayBenefits\", fontsize = 14)\n",
    "plt.ylabel(\"EmployeeName\", fontsize = 14)\n",
    "plt.legend(fontsize='x-large', title_fontsize='40')\n",
    "plt.title('Total pay Benefits for each Employee', size = 16)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get the top 10 Employee with highest benefits\n",
    "\n",
    "top_10_Benefits = train_df.sort_values(by=['TotalPayBenefits'], ascending=False).head(10)['EmployeeName'].unique()\n",
    "top_10_Benefits\n",
    "top10_chart = train_df[train_df['JobTitle'].isin(top_10_Benefits)]\n",
    "top10_chart = train_df[train_df['JobTitle'].isin(top_10_Benefits)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>EmployeeName</th>\n",
       "      <th>JobTitle</th>\n",
       "      <th>BasePay</th>\n",
       "      <th>OvertimePay</th>\n",
       "      <th>OtherPay</th>\n",
       "      <th>Benefits</th>\n",
       "      <th>TotalPay</th>\n",
       "      <th>TotalPayBenefits</th>\n",
       "      <th>Year</th>\n",
       "      <th>Notes</th>\n",
       "      <th>Agency</th>\n",
       "      <th>Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [Id, EmployeeName, JobTitle, BasePay, OvertimePay, OtherPay, Benefits, TotalPay, TotalPayBenefits, Year, Notes, Agency, Status]\n",
       "Index: []"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "# Figure 2 — Top 10 Job Titles with High Benefits\n",
    "\n",
    "top_10_Job_Title_Benefits = train_df.sort_values(by=['TotalPayBenefits'], ascending=False).head(10)['JobTitle'].unique()\n",
    "top_10_Job_Title_Benefits\n",
    "top_10_Job_Title_Benefit = train_df[train_df['EmployeeName'].isin(top_10_Job_Title_Benefits)]\n",
    "top_10_Job_Title_Benefit = train_df[train_df['EmployeeName'].isin(top_10_Job_Title_Benefits)]\n",
    "top_10_Job_Title_Benefit\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Id                 1048575\n",
       "job                   3418\n",
       "sector                  90\n",
       "Month_salary             1\n",
       "13_salary            56042\n",
       "eventual_salary      48251\n",
       "indemnity             1767\n",
       "extra_salary         48653\n",
       "discount_salary       8560\n",
       "total_salary        499658\n",
       "Unnamed: 10            849\n",
       "dtype: int64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>EmployeeName</th>\n",
       "      <th>JobTitle</th>\n",
       "      <th>BasePay</th>\n",
       "      <th>OvertimePay</th>\n",
       "      <th>OtherPay</th>\n",
       "      <th>Benefits</th>\n",
       "      <th>TotalPay</th>\n",
       "      <th>TotalPayBenefits</th>\n",
       "      <th>Year</th>\n",
       "      <th>Notes</th>\n",
       "      <th>Agency</th>\n",
       "      <th>Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NATHANIEL FORD</td>\n",
       "      <td>GENERAL MANAGER-METROPOLITAN TRANSIT AUTHORITY</td>\n",
       "      <td>167411.18</td>\n",
       "      <td>0</td>\n",
       "      <td>400184</td>\n",
       "      <td>NaN</td>\n",
       "      <td>567595.43</td>\n",
       "      <td>567595.43</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>GARY JIMENEZ</td>\n",
       "      <td>CAPTAIN III (POLICE DEPARTMENT)</td>\n",
       "      <td>155966.02</td>\n",
       "      <td>245132</td>\n",
       "      <td>137811</td>\n",
       "      <td>NaN</td>\n",
       "      <td>538909.28</td>\n",
       "      <td>538909.28</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>ALBERT PARDINI</td>\n",
       "      <td>CAPTAIN III (POLICE DEPARTMENT)</td>\n",
       "      <td>212739.13</td>\n",
       "      <td>106088</td>\n",
       "      <td>16452.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>335279.91</td>\n",
       "      <td>335279.91</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>CHRISTOPHER CHONG</td>\n",
       "      <td>WIRE ROPE CABLE MAINTENANCE MECHANIC</td>\n",
       "      <td>77916.00</td>\n",
       "      <td>56120.7</td>\n",
       "      <td>198307</td>\n",
       "      <td>NaN</td>\n",
       "      <td>332343.61</td>\n",
       "      <td>332343.61</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>PATRICK GARDNER</td>\n",
       "      <td>DEPUTY CHIEF OF DEPARTMENT,(FIRE DEPARTMENT)</td>\n",
       "      <td>134401.60</td>\n",
       "      <td>9737</td>\n",
       "      <td>182235</td>\n",
       "      <td>NaN</td>\n",
       "      <td>326373.19</td>\n",
       "      <td>326373.19</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>95</td>\n",
       "      <td>96</td>\n",
       "      <td>MIVIC HIROSE</td>\n",
       "      <td>MANAGER VIII</td>\n",
       "      <td>215180.76</td>\n",
       "      <td>0</td>\n",
       "      <td>12000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>227180.76</td>\n",
       "      <td>227180.76</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>96</td>\n",
       "      <td>97</td>\n",
       "      <td>SARAH CARY</td>\n",
       "      <td>ANESTHETIST</td>\n",
       "      <td>208925.60</td>\n",
       "      <td>5539.3</td>\n",
       "      <td>12615.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>227080.50</td>\n",
       "      <td>227080.50</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>97</td>\n",
       "      <td>98</td>\n",
       "      <td>KEVIN SMITH</td>\n",
       "      <td>BATTALION CHIEF, (FIRE DEPARTMENT)</td>\n",
       "      <td>168692.67</td>\n",
       "      <td>35402.7</td>\n",
       "      <td>22262</td>\n",
       "      <td>NaN</td>\n",
       "      <td>226357.33</td>\n",
       "      <td>226357.33</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>98</td>\n",
       "      <td>99</td>\n",
       "      <td>GREGORY STANGLAND</td>\n",
       "      <td>FIRE FIGHTER PARAMEDIC</td>\n",
       "      <td>122404.98</td>\n",
       "      <td>86719.4</td>\n",
       "      <td>15315.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>224439.97</td>\n",
       "      <td>224439.97</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>99</td>\n",
       "      <td>100</td>\n",
       "      <td>SONALI BOSE</td>\n",
       "      <td>DEPUTY DIRECTOR II - MUNICIPAL TRANSPORTATION AG</td>\n",
       "      <td>224035.85</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>224035.85</td>\n",
       "      <td>224035.85</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Id       EmployeeName                                          JobTitle  \\\n",
       "0     1     NATHANIEL FORD    GENERAL MANAGER-METROPOLITAN TRANSIT AUTHORITY   \n",
       "1     2       GARY JIMENEZ                   CAPTAIN III (POLICE DEPARTMENT)   \n",
       "2     3     ALBERT PARDINI                   CAPTAIN III (POLICE DEPARTMENT)   \n",
       "3     4  CHRISTOPHER CHONG              WIRE ROPE CABLE MAINTENANCE MECHANIC   \n",
       "4     5    PATRICK GARDNER      DEPUTY CHIEF OF DEPARTMENT,(FIRE DEPARTMENT)   \n",
       "..  ...                ...                                               ...   \n",
       "95   96       MIVIC HIROSE                                      MANAGER VIII   \n",
       "96   97         SARAH CARY                                       ANESTHETIST   \n",
       "97   98        KEVIN SMITH                BATTALION CHIEF, (FIRE DEPARTMENT)   \n",
       "98   99  GREGORY STANGLAND                            FIRE FIGHTER PARAMEDIC   \n",
       "99  100        SONALI BOSE  DEPUTY DIRECTOR II - MUNICIPAL TRANSPORTATION AG   \n",
       "\n",
       "      BasePay OvertimePay OtherPay Benefits   TotalPay  TotalPayBenefits  \\\n",
       "0   167411.18           0   400184      NaN  567595.43         567595.43   \n",
       "1   155966.02      245132   137811      NaN  538909.28         538909.28   \n",
       "2   212739.13      106088  16452.6      NaN  335279.91         335279.91   \n",
       "3    77916.00     56120.7   198307      NaN  332343.61         332343.61   \n",
       "4   134401.60        9737   182235      NaN  326373.19         326373.19   \n",
       "..        ...         ...      ...      ...        ...               ...   \n",
       "95  215180.76           0    12000      NaN  227180.76         227180.76   \n",
       "96  208925.60      5539.3  12615.6      NaN  227080.50         227080.50   \n",
       "97  168692.67     35402.7    22262      NaN  226357.33         226357.33   \n",
       "98  122404.98     86719.4  15315.6      NaN  224439.97         224439.97   \n",
       "99  224035.85           0        0      NaN  224035.85         224035.85   \n",
       "\n",
       "    Year  Notes         Agency Status  \n",
       "0   2011    NaN  San Francisco    NaN  \n",
       "1   2011    NaN  San Francisco    NaN  \n",
       "2   2011    NaN  San Francisco    NaN  \n",
       "3   2011    NaN  San Francisco    NaN  \n",
       "4   2011    NaN  San Francisco    NaN  \n",
       "..   ...    ...            ...    ...  \n",
       "95  2011    NaN  San Francisco    NaN  \n",
       "96  2011    NaN  San Francisco    NaN  \n",
       "97  2011    NaN  San Francisco    NaN  \n",
       "98  2011    NaN  San Francisco    NaN  \n",
       "99  2011    NaN  San Francisco    NaN  \n",
       "\n",
       "[100 rows x 13 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "import pandas as pd\n",
    "import sklearn as sk\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "from scipy.stats import norm\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.model_selection import cross_val_predict\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.model_selection import StratifiedKFold\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.linear_model import Ridge\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.externals import joblib\n",
    "train_df.head(100)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Id', 'EmployeeName', 'JobTitle', 'BasePay', 'OvertimePay', 'OtherPay',\n",
       "       'Benefits', 'TotalPay', 'TotalPayBenefits', 'Year', 'Notes', 'Agency',\n",
       "       'Status'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "train_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "def month_Salary(salary):\n",
    "\n",
    "    month_Salary = train_df.sort_values(by = [Base_Pay], ascending=True)\n",
    "    month_Salary.head(5)\n",
    "    return month_Salary\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>EmployeeName</th>\n",
       "      <th>JobTitle</th>\n",
       "      <th>BasePay</th>\n",
       "      <th>OvertimePay</th>\n",
       "      <th>OtherPay</th>\n",
       "      <th>Benefits</th>\n",
       "      <th>TotalPay</th>\n",
       "      <th>TotalPayBenefits</th>\n",
       "      <th>Year</th>\n",
       "      <th>Notes</th>\n",
       "      <th>Agency</th>\n",
       "      <th>Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>72925</td>\n",
       "      <td>72926</td>\n",
       "      <td>Gregory P Suhr</td>\n",
       "      <td>Chief of Police</td>\n",
       "      <td>319275.01</td>\n",
       "      <td>0</td>\n",
       "      <td>20007.1</td>\n",
       "      <td>86533.2</td>\n",
       "      <td>339282.07</td>\n",
       "      <td>425815.28</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>110532</td>\n",
       "      <td>110533</td>\n",
       "      <td>Amy P Hart</td>\n",
       "      <td>Asst Med Examiner</td>\n",
       "      <td>318835.49</td>\n",
       "      <td>10713</td>\n",
       "      <td>60563.5</td>\n",
       "      <td>89540.2</td>\n",
       "      <td>390111.98</td>\n",
       "      <td>479652.21</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>72929</td>\n",
       "      <td>72930</td>\n",
       "      <td>Robert L Shaw</td>\n",
       "      <td>Dep Dir for Investments, Ret</td>\n",
       "      <td>315572.01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>82849.7</td>\n",
       "      <td>315572.01</td>\n",
       "      <td>398421.67</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>72926</td>\n",
       "      <td>72927</td>\n",
       "      <td>Joanne M Hayes-White</td>\n",
       "      <td>Chief, Fire Department</td>\n",
       "      <td>313686.01</td>\n",
       "      <td>0</td>\n",
       "      <td>23236</td>\n",
       "      <td>85431.4</td>\n",
       "      <td>336922.01</td>\n",
       "      <td>422353.40</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>72931</td>\n",
       "      <td>72932</td>\n",
       "      <td>Harlan L Kelly-Jr</td>\n",
       "      <td>Executive Contract Employee</td>\n",
       "      <td>313312.52</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>82319.5</td>\n",
       "      <td>313312.52</td>\n",
       "      <td>395632.03</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>110585</td>\n",
       "      <td>110586</td>\n",
       "      <td>Arthur L Wang</td>\n",
       "      <td>Manager VIII</td>\n",
       "      <td>240008.92</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>76801.2</td>\n",
       "      <td>240008.92</td>\n",
       "      <td>316810.09</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>72982</td>\n",
       "      <td>72983</td>\n",
       "      <td>Jose L Velo</td>\n",
       "      <td>Assistant Deputy Chief 2</td>\n",
       "      <td>239247.05</td>\n",
       "      <td>0</td>\n",
       "      <td>14354.8</td>\n",
       "      <td>70323.9</td>\n",
       "      <td>253601.87</td>\n",
       "      <td>323925.81</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>72986</td>\n",
       "      <td>72987</td>\n",
       "      <td>Kyle J Merkins</td>\n",
       "      <td>Assistant Deputy Chief 2</td>\n",
       "      <td>239247.04</td>\n",
       "      <td>0</td>\n",
       "      <td>14354.8</td>\n",
       "      <td>67951.7</td>\n",
       "      <td>253601.86</td>\n",
       "      <td>321553.55</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>72983</td>\n",
       "      <td>72984</td>\n",
       "      <td>Jeffrey  Myers</td>\n",
       "      <td>Emergency Medical Svcs Chief</td>\n",
       "      <td>239247.00</td>\n",
       "      <td>0</td>\n",
       "      <td>14354.8</td>\n",
       "      <td>70323.9</td>\n",
       "      <td>253601.82</td>\n",
       "      <td>323925.76</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>72975</td>\n",
       "      <td>72976</td>\n",
       "      <td>Kenneth A Lombardi</td>\n",
       "      <td>Assistant Deputy Chief 2</td>\n",
       "      <td>239247.00</td>\n",
       "      <td>0</td>\n",
       "      <td>19855.3</td>\n",
       "      <td>68857</td>\n",
       "      <td>259102.26</td>\n",
       "      <td>327959.25</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Id          EmployeeName                      JobTitle    BasePay  \\\n",
       "72925    72926        Gregory P Suhr               Chief of Police  319275.01   \n",
       "110532  110533            Amy P Hart             Asst Med Examiner  318835.49   \n",
       "72929    72930         Robert L Shaw  Dep Dir for Investments, Ret  315572.01   \n",
       "72926    72927  Joanne M Hayes-White        Chief, Fire Department  313686.01   \n",
       "72931    72932     Harlan L Kelly-Jr   Executive Contract Employee  313312.52   \n",
       "...        ...                   ...                           ...        ...   \n",
       "110585  110586         Arthur L Wang                  Manager VIII  240008.92   \n",
       "72982    72983           Jose L Velo      Assistant Deputy Chief 2  239247.05   \n",
       "72986    72987        Kyle J Merkins      Assistant Deputy Chief 2  239247.04   \n",
       "72983    72984        Jeffrey  Myers  Emergency Medical Svcs Chief  239247.00   \n",
       "72975    72976    Kenneth A Lombardi      Assistant Deputy Chief 2  239247.00   \n",
       "\n",
       "       OvertimePay OtherPay Benefits   TotalPay  TotalPayBenefits  Year  \\\n",
       "72925            0  20007.1  86533.2  339282.07         425815.28  2013   \n",
       "110532       10713  60563.5  89540.2  390111.98         479652.21  2014   \n",
       "72929            0        0  82849.7  315572.01         398421.67  2013   \n",
       "72926            0    23236  85431.4  336922.01         422353.40  2013   \n",
       "72931            0        0  82319.5  313312.52         395632.03  2013   \n",
       "...            ...      ...      ...        ...               ...   ...   \n",
       "110585           0        0  76801.2  240008.92         316810.09  2014   \n",
       "72982            0  14354.8  70323.9  253601.87         323925.81  2013   \n",
       "72986            0  14354.8  67951.7  253601.86         321553.55  2013   \n",
       "72983            0  14354.8  70323.9  253601.82         323925.76  2013   \n",
       "72975            0  19855.3    68857  259102.26         327959.25  2013   \n",
       "\n",
       "        Notes         Agency Status  \n",
       "72925     NaN  San Francisco    NaN  \n",
       "110532    NaN  San Francisco     FT  \n",
       "72929     NaN  San Francisco    NaN  \n",
       "72926     NaN  San Francisco    NaN  \n",
       "72931     NaN  San Francisco    NaN  \n",
       "...       ...            ...    ...  \n",
       "110585    NaN  San Francisco     FT  \n",
       "72982     NaN  San Francisco    NaN  \n",
       "72986     NaN  San Francisco    NaN  \n",
       "72983     NaN  San Francisco    NaN  \n",
       "72975     NaN  San Francisco    NaN  \n",
       "\n",
       "[100 rows x 13 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "    #What are the top 100 employees with highest  BasePay ?\n",
    "    Open_s = train_df.sort_values(by = ['BasePay'], ascending=False)\n",
    "    Open_s.head(100)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>EmployeeName</th>\n",
       "      <th>JobTitle</th>\n",
       "      <th>BasePay</th>\n",
       "      <th>OvertimePay</th>\n",
       "      <th>OtherPay</th>\n",
       "      <th>Benefits</th>\n",
       "      <th>TotalPay</th>\n",
       "      <th>TotalPayBenefits</th>\n",
       "      <th>Year</th>\n",
       "      <th>Notes</th>\n",
       "      <th>Agency</th>\n",
       "      <th>Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>GARY JIMENEZ</td>\n",
       "      <td>CAPTAIN III (POLICE DEPARTMENT)</td>\n",
       "      <td>155966.02</td>\n",
       "      <td>245131.88</td>\n",
       "      <td>137811</td>\n",
       "      <td>NaN</td>\n",
       "      <td>538909.28</td>\n",
       "      <td>538909.28</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36159</th>\n",
       "      <td>36160</td>\n",
       "      <td>Gary Altenberg</td>\n",
       "      <td>Lieutenant, Fire Suppression</td>\n",
       "      <td>128808.87</td>\n",
       "      <td>220909.48</td>\n",
       "      <td>13126.3</td>\n",
       "      <td>44430.1</td>\n",
       "      <td>362844.66</td>\n",
       "      <td>407274.78</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72964</th>\n",
       "      <td>72965</td>\n",
       "      <td>Whitney P Yee</td>\n",
       "      <td>Deputy Sheriff</td>\n",
       "      <td>95123.00</td>\n",
       "      <td>196689.18</td>\n",
       "      <td>16622.7</td>\n",
       "      <td>36125.5</td>\n",
       "      <td>308434.84</td>\n",
       "      <td>344560.33</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36163</th>\n",
       "      <td>36164</td>\n",
       "      <td>Frederick Binkley</td>\n",
       "      <td>EMT/Paramedic/Firefighter</td>\n",
       "      <td>126863.19</td>\n",
       "      <td>192424.49</td>\n",
       "      <td>17917.2</td>\n",
       "      <td>44438.2</td>\n",
       "      <td>337204.86</td>\n",
       "      <td>381643.11</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110574</th>\n",
       "      <td>110575</td>\n",
       "      <td>Antonio B Santiago</td>\n",
       "      <td>Deputy Sheriff</td>\n",
       "      <td>94191.04</td>\n",
       "      <td>173547.73</td>\n",
       "      <td>19740.8</td>\n",
       "      <td>38238.6</td>\n",
       "      <td>287479.58</td>\n",
       "      <td>325718.15</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110577</th>\n",
       "      <td>110578</td>\n",
       "      <td>Barry J Bloom</td>\n",
       "      <td>Deputy Sheriff</td>\n",
       "      <td>94191.13</td>\n",
       "      <td>173178.23</td>\n",
       "      <td>17960.1</td>\n",
       "      <td>38171.5</td>\n",
       "      <td>285329.47</td>\n",
       "      <td>323500.96</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110583</th>\n",
       "      <td>110584</td>\n",
       "      <td>Whitney P Yee</td>\n",
       "      <td>Deputy Sheriff</td>\n",
       "      <td>94191.00</td>\n",
       "      <td>169659.92</td>\n",
       "      <td>16813.5</td>\n",
       "      <td>38311.1</td>\n",
       "      <td>280664.38</td>\n",
       "      <td>318975.45</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72943</th>\n",
       "      <td>72944</td>\n",
       "      <td>Gary L Altenberg</td>\n",
       "      <td>Lieutenant, Fire Suppression</td>\n",
       "      <td>135903.02</td>\n",
       "      <td>163477.81</td>\n",
       "      <td>20995</td>\n",
       "      <td>46030.8</td>\n",
       "      <td>320375.79</td>\n",
       "      <td>366406.55</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36199</th>\n",
       "      <td>36200</td>\n",
       "      <td>Scott Scholzen</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>109783.86</td>\n",
       "      <td>160418.47</td>\n",
       "      <td>19873.8</td>\n",
       "      <td>41230.9</td>\n",
       "      <td>290076.13</td>\n",
       "      <td>331307.02</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73021</th>\n",
       "      <td>73022</td>\n",
       "      <td>Barry J Bloom</td>\n",
       "      <td>Deputy Sheriff</td>\n",
       "      <td>95123.08</td>\n",
       "      <td>156077.49</td>\n",
       "      <td>17018.2</td>\n",
       "      <td>35837.9</td>\n",
       "      <td>268218.79</td>\n",
       "      <td>304056.70</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110652</th>\n",
       "      <td>110653</td>\n",
       "      <td>Kristian C Dejesus</td>\n",
       "      <td>Deputy Sheriff</td>\n",
       "      <td>93475.61</td>\n",
       "      <td>148147.92</td>\n",
       "      <td>13499</td>\n",
       "      <td>37450.5</td>\n",
       "      <td>255122.55</td>\n",
       "      <td>292573.09</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36161</th>\n",
       "      <td>36162</td>\n",
       "      <td>Khoa Trinh</td>\n",
       "      <td>Electronic Maintenance Tech</td>\n",
       "      <td>111921.00</td>\n",
       "      <td>146415.32</td>\n",
       "      <td>78057.4</td>\n",
       "      <td>53102.3</td>\n",
       "      <td>336393.73</td>\n",
       "      <td>389496.02</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110582</th>\n",
       "      <td>110583</td>\n",
       "      <td>Jay K Lee</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>111640.49</td>\n",
       "      <td>145867.35</td>\n",
       "      <td>18987.6</td>\n",
       "      <td>42998.8</td>\n",
       "      <td>276495.41</td>\n",
       "      <td>319494.22</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36221</th>\n",
       "      <td>36222</td>\n",
       "      <td>Alvin Lau</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>110847.13</td>\n",
       "      <td>139260.09</td>\n",
       "      <td>17844.2</td>\n",
       "      <td>40823.2</td>\n",
       "      <td>267951.41</td>\n",
       "      <td>308774.60</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>36</td>\n",
       "      <td>KHOA TRINH</td>\n",
       "      <td>ELECTRONIC MAINTENANCE TECHNICIAN</td>\n",
       "      <td>101953.20</td>\n",
       "      <td>139102.95</td>\n",
       "      <td>16483.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>257540.09</td>\n",
       "      <td>257540.09</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36347</th>\n",
       "      <td>36348</td>\n",
       "      <td>Evette Geer-Stevens</td>\n",
       "      <td>Transit Supervisor</td>\n",
       "      <td>88400.70</td>\n",
       "      <td>137462.80</td>\n",
       "      <td>4212</td>\n",
       "      <td>41172.5</td>\n",
       "      <td>230075.50</td>\n",
       "      <td>271247.98</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73018</th>\n",
       "      <td>73019</td>\n",
       "      <td>Ernest L Johnson</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>109390.44</td>\n",
       "      <td>136843.65</td>\n",
       "      <td>20188.9</td>\n",
       "      <td>39131.7</td>\n",
       "      <td>266423.00</td>\n",
       "      <td>305554.70</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>89</td>\n",
       "      <td>EVETTE GEER-STEVENS</td>\n",
       "      <td>TRANSIT SUPERVISOR</td>\n",
       "      <td>88062.00</td>\n",
       "      <td>135159.38</td>\n",
       "      <td>7018.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>230239.98</td>\n",
       "      <td>230239.98</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110593</th>\n",
       "      <td>110594</td>\n",
       "      <td>Romelia C Scott</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>112703.73</td>\n",
       "      <td>134077.58</td>\n",
       "      <td>23627</td>\n",
       "      <td>43240</td>\n",
       "      <td>270408.27</td>\n",
       "      <td>313648.31</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36206</th>\n",
       "      <td>36207</td>\n",
       "      <td>Gregory Stangland</td>\n",
       "      <td>EMT/Paramedic/Firefighter</td>\n",
       "      <td>128091.78</td>\n",
       "      <td>133645.42</td>\n",
       "      <td>16130.2</td>\n",
       "      <td>43913.3</td>\n",
       "      <td>277867.44</td>\n",
       "      <td>321780.77</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36312</th>\n",
       "      <td>36313</td>\n",
       "      <td>Ernest Johnson</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>103226.60</td>\n",
       "      <td>133355.19</td>\n",
       "      <td>16317.6</td>\n",
       "      <td>24733.1</td>\n",
       "      <td>252899.42</td>\n",
       "      <td>277632.53</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72973</th>\n",
       "      <td>72974</td>\n",
       "      <td>Frederick  Binkley</td>\n",
       "      <td>EMT/Paramedic/Firefighter</td>\n",
       "      <td>135144.28</td>\n",
       "      <td>132615.09</td>\n",
       "      <td>18656.9</td>\n",
       "      <td>45326.8</td>\n",
       "      <td>286416.23</td>\n",
       "      <td>331743.01</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72927</th>\n",
       "      <td>72928</td>\n",
       "      <td>Samson  Lai</td>\n",
       "      <td>Battalion Chief, Fire Suppress</td>\n",
       "      <td>186236.42</td>\n",
       "      <td>131217.63</td>\n",
       "      <td>29648.3</td>\n",
       "      <td>57064.9</td>\n",
       "      <td>347102.32</td>\n",
       "      <td>404167.27</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36238</th>\n",
       "      <td>36239</td>\n",
       "      <td>Martin Beltran</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>109783.87</td>\n",
       "      <td>130268.39</td>\n",
       "      <td>19688.1</td>\n",
       "      <td>39980.8</td>\n",
       "      <td>259740.36</td>\n",
       "      <td>299721.20</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36365</th>\n",
       "      <td>36366</td>\n",
       "      <td>Harold Byrd</td>\n",
       "      <td>Transit Supervisor</td>\n",
       "      <td>88062.00</td>\n",
       "      <td>129414.28</td>\n",
       "      <td>9038.21</td>\n",
       "      <td>41733.1</td>\n",
       "      <td>226514.49</td>\n",
       "      <td>268247.55</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110539</th>\n",
       "      <td>110540</td>\n",
       "      <td>Samson Lai</td>\n",
       "      <td>Battalion Chief, Fire Suppress</td>\n",
       "      <td>179464.14</td>\n",
       "      <td>128685.99</td>\n",
       "      <td>27334.8</td>\n",
       "      <td>59876.9</td>\n",
       "      <td>335484.96</td>\n",
       "      <td>395361.86</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110608</th>\n",
       "      <td>110609</td>\n",
       "      <td>Terence E Woo</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>111640.48</td>\n",
       "      <td>127698.35</td>\n",
       "      <td>21604.8</td>\n",
       "      <td>43610.4</td>\n",
       "      <td>260943.62</td>\n",
       "      <td>304554.04</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72988</th>\n",
       "      <td>72989</td>\n",
       "      <td>Oscar  Cabrera</td>\n",
       "      <td>EMT/Paramedic/Firefighter</td>\n",
       "      <td>135144.27</td>\n",
       "      <td>127620.50</td>\n",
       "      <td>13695.5</td>\n",
       "      <td>44513.9</td>\n",
       "      <td>276460.27</td>\n",
       "      <td>320974.21</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>104</td>\n",
       "      <td>EDWARD DENNIS</td>\n",
       "      <td>TRANSIT SUPERVISOR</td>\n",
       "      <td>88400.70</td>\n",
       "      <td>126778.88</td>\n",
       "      <td>7228.67</td>\n",
       "      <td>NaN</td>\n",
       "      <td>222408.25</td>\n",
       "      <td>222408.25</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>125</td>\n",
       "      <td>TYRONNE JULIAN</td>\n",
       "      <td>TRANSIT SUPERVISOR</td>\n",
       "      <td>88062.00</td>\n",
       "      <td>126725.82</td>\n",
       "      <td>2784.61</td>\n",
       "      <td>NaN</td>\n",
       "      <td>217572.43</td>\n",
       "      <td>217572.43</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>167</td>\n",
       "      <td>THOMAS ALDANA</td>\n",
       "      <td>TRANSIT SUPERVISOR</td>\n",
       "      <td>90094.20</td>\n",
       "      <td>111323.49</td>\n",
       "      <td>8344.75</td>\n",
       "      <td>NaN</td>\n",
       "      <td>209762.44</td>\n",
       "      <td>209762.44</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>161</td>\n",
       "      <td>HAROLD BYRD</td>\n",
       "      <td>TRANSIT SUPERVISOR</td>\n",
       "      <td>88062.00</td>\n",
       "      <td>111199.78</td>\n",
       "      <td>11373.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>210635.36</td>\n",
       "      <td>210635.36</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36242</th>\n",
       "      <td>36243</td>\n",
       "      <td>Douglas Spikes</td>\n",
       "      <td>EMT/Paramedic/Firefighter</td>\n",
       "      <td>128091.81</td>\n",
       "      <td>110423.84</td>\n",
       "      <td>16011.5</td>\n",
       "      <td>43394.9</td>\n",
       "      <td>254527.20</td>\n",
       "      <td>297922.12</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72978</th>\n",
       "      <td>72979</td>\n",
       "      <td>Terry W Smerdel</td>\n",
       "      <td>Captain, Fire Suppression</td>\n",
       "      <td>155174.51</td>\n",
       "      <td>110300.99</td>\n",
       "      <td>12004.3</td>\n",
       "      <td>48172.5</td>\n",
       "      <td>277479.82</td>\n",
       "      <td>325652.30</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36287</th>\n",
       "      <td>36288</td>\n",
       "      <td>Todd Plunkett</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>110847.12</td>\n",
       "      <td>110253.41</td>\n",
       "      <td>19124.5</td>\n",
       "      <td>40910</td>\n",
       "      <td>240225.04</td>\n",
       "      <td>281135.04</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36245</th>\n",
       "      <td>36246</td>\n",
       "      <td>Edward Chu</td>\n",
       "      <td>Lieutenant, Fire Suppression</td>\n",
       "      <td>127933.79</td>\n",
       "      <td>110241.31</td>\n",
       "      <td>15563</td>\n",
       "      <td>42506.5</td>\n",
       "      <td>253738.12</td>\n",
       "      <td>296244.65</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111336</th>\n",
       "      <td>111337</td>\n",
       "      <td>Young V Laolagi</td>\n",
       "      <td>Track Maint Wrk Sprv 1</td>\n",
       "      <td>89663.01</td>\n",
       "      <td>110139.58</td>\n",
       "      <td>6581.37</td>\n",
       "      <td>34873.5</td>\n",
       "      <td>206383.96</td>\n",
       "      <td>241257.42</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110890</th>\n",
       "      <td>110891</td>\n",
       "      <td>Suzette F Humphrey</td>\n",
       "      <td>Deputy Sheriff</td>\n",
       "      <td>94191.00</td>\n",
       "      <td>110046.42</td>\n",
       "      <td>18959.1</td>\n",
       "      <td>39011.3</td>\n",
       "      <td>223196.56</td>\n",
       "      <td>262207.83</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36302</th>\n",
       "      <td>36303</td>\n",
       "      <td>Johnson You</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>110847.12</td>\n",
       "      <td>109506.20</td>\n",
       "      <td>18855.8</td>\n",
       "      <td>40725.5</td>\n",
       "      <td>239209.15</td>\n",
       "      <td>279934.69</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110712</th>\n",
       "      <td>110713</td>\n",
       "      <td>Malcolm S Fong</td>\n",
       "      <td>Police Officer 3</td>\n",
       "      <td>118898.14</td>\n",
       "      <td>109310.13</td>\n",
       "      <td>12557.9</td>\n",
       "      <td>39456.6</td>\n",
       "      <td>240766.21</td>\n",
       "      <td>280222.76</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36239</th>\n",
       "      <td>36240</td>\n",
       "      <td>Robert Winslow</td>\n",
       "      <td>Lieutenant, Fire Suppression</td>\n",
       "      <td>127573.44</td>\n",
       "      <td>108989.99</td>\n",
       "      <td>22025.5</td>\n",
       "      <td>40696.9</td>\n",
       "      <td>258588.89</td>\n",
       "      <td>299285.84</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110666</th>\n",
       "      <td>110667</td>\n",
       "      <td>Matthew G Lane</td>\n",
       "      <td>EMT/Paramedic/Firefighter</td>\n",
       "      <td>128578.98</td>\n",
       "      <td>108951.80</td>\n",
       "      <td>7714.76</td>\n",
       "      <td>45178.2</td>\n",
       "      <td>245245.54</td>\n",
       "      <td>290423.75</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36316</th>\n",
       "      <td>36317</td>\n",
       "      <td>Gregory Cacharelis</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>109783.87</td>\n",
       "      <td>108781.84</td>\n",
       "      <td>18752.9</td>\n",
       "      <td>39811.8</td>\n",
       "      <td>237318.60</td>\n",
       "      <td>277130.42</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36271</th>\n",
       "      <td>36272</td>\n",
       "      <td>Guy Goodwin</td>\n",
       "      <td>EMT/Paramedic/Firefighter</td>\n",
       "      <td>126863.18</td>\n",
       "      <td>108598.97</td>\n",
       "      <td>8835.86</td>\n",
       "      <td>42099.9</td>\n",
       "      <td>244298.01</td>\n",
       "      <td>286397.95</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110618</th>\n",
       "      <td>110619</td>\n",
       "      <td>Edward Y Chu</td>\n",
       "      <td>Lieutenant, Fire Suppression</td>\n",
       "      <td>129817.24</td>\n",
       "      <td>108123.01</td>\n",
       "      <td>16979.3</td>\n",
       "      <td>46748.4</td>\n",
       "      <td>254919.54</td>\n",
       "      <td>301667.93</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>273</th>\n",
       "      <td>274</td>\n",
       "      <td>FERDINAND CADELINA</td>\n",
       "      <td>TRANSIT SUPERVISOR</td>\n",
       "      <td>88400.70</td>\n",
       "      <td>107913.65</td>\n",
       "      <td>2713.83</td>\n",
       "      <td>NaN</td>\n",
       "      <td>199028.18</td>\n",
       "      <td>199028.18</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111757</th>\n",
       "      <td>111758</td>\n",
       "      <td>Mike B Carrasco</td>\n",
       "      <td>Track Maint Wrk Sprv 1</td>\n",
       "      <td>89663.00</td>\n",
       "      <td>107841.55</td>\n",
       "      <td>0</td>\n",
       "      <td>33448.9</td>\n",
       "      <td>197504.55</td>\n",
       "      <td>230953.41</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73544</th>\n",
       "      <td>73545</td>\n",
       "      <td>Kristian C DeJesus</td>\n",
       "      <td>Deputy Sheriff</td>\n",
       "      <td>95119.50</td>\n",
       "      <td>107572.21</td>\n",
       "      <td>13764</td>\n",
       "      <td>35234.2</td>\n",
       "      <td>216455.69</td>\n",
       "      <td>251689.88</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73778</th>\n",
       "      <td>73779</td>\n",
       "      <td>Harold D Byrd</td>\n",
       "      <td>Transit Supervisor</td>\n",
       "      <td>91449.00</td>\n",
       "      <td>107053.18</td>\n",
       "      <td>8924.07</td>\n",
       "      <td>33653.7</td>\n",
       "      <td>207426.25</td>\n",
       "      <td>241079.93</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>386</th>\n",
       "      <td>387</td>\n",
       "      <td>RICHARD ELLIOTT</td>\n",
       "      <td>ELECTRICAL TRANSIT SYSTEM MECHANIC</td>\n",
       "      <td>77580.40</td>\n",
       "      <td>106701.58</td>\n",
       "      <td>7859.19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>192141.17</td>\n",
       "      <td>192141.17</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110724</th>\n",
       "      <td>110725</td>\n",
       "      <td>Neal Jaymes</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>112703.75</td>\n",
       "      <td>106596.14</td>\n",
       "      <td>15634.9</td>\n",
       "      <td>43283.2</td>\n",
       "      <td>234934.78</td>\n",
       "      <td>278217.98</td>\n",
       "      <td>2014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>FT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36751</th>\n",
       "      <td>36752</td>\n",
       "      <td>Edward Dennis</td>\n",
       "      <td>Transit Supervisor</td>\n",
       "      <td>87723.30</td>\n",
       "      <td>106319.68</td>\n",
       "      <td>6460.99</td>\n",
       "      <td>40949.2</td>\n",
       "      <td>200503.97</td>\n",
       "      <td>241453.13</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73054</th>\n",
       "      <td>73055</td>\n",
       "      <td>Alan L Harvey</td>\n",
       "      <td>Firefighter</td>\n",
       "      <td>116956.72</td>\n",
       "      <td>106220.10</td>\n",
       "      <td>28071.7</td>\n",
       "      <td>43336.1</td>\n",
       "      <td>251248.55</td>\n",
       "      <td>294584.64</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>ALBERT PARDINI</td>\n",
       "      <td>CAPTAIN III (POLICE DEPARTMENT)</td>\n",
       "      <td>212739.13</td>\n",
       "      <td>106088.18</td>\n",
       "      <td>16452.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>335279.91</td>\n",
       "      <td>335279.91</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>427</th>\n",
       "      <td>428</td>\n",
       "      <td>MARK SENORES</td>\n",
       "      <td>ELECTRICAL TRANSIT SYSTEM MECHANIC</td>\n",
       "      <td>76298.77</td>\n",
       "      <td>105953.61</td>\n",
       "      <td>6962.09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189214.47</td>\n",
       "      <td>189214.47</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36656</th>\n",
       "      <td>36657</td>\n",
       "      <td>Charles Scott</td>\n",
       "      <td>Transit Supervisor</td>\n",
       "      <td>88739.40</td>\n",
       "      <td>105674.81</td>\n",
       "      <td>9170.46</td>\n",
       "      <td>41776.8</td>\n",
       "      <td>203584.67</td>\n",
       "      <td>245361.42</td>\n",
       "      <td>2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>59</td>\n",
       "      <td>DOUGLAS RIBA</td>\n",
       "      <td>INCIDENT SUPPORT SPECIALIST</td>\n",
       "      <td>115381.02</td>\n",
       "      <td>105028.94</td>\n",
       "      <td>19016.4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>239426.36</td>\n",
       "      <td>239426.36</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73010</th>\n",
       "      <td>73011</td>\n",
       "      <td>Robert J Lopez</td>\n",
       "      <td>Lieutenant, Fire Suppression</td>\n",
       "      <td>135377.77</td>\n",
       "      <td>105011.07</td>\n",
       "      <td>25814.2</td>\n",
       "      <td>42960.5</td>\n",
       "      <td>266203.05</td>\n",
       "      <td>309163.56</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73471</th>\n",
       "      <td>73472</td>\n",
       "      <td>Antonio B Santiago</td>\n",
       "      <td>Deputy Sheriff</td>\n",
       "      <td>95123.00</td>\n",
       "      <td>104672.83</td>\n",
       "      <td>18980.1</td>\n",
       "      <td>36017.4</td>\n",
       "      <td>218775.91</td>\n",
       "      <td>254793.35</td>\n",
       "      <td>2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>70</td>\n",
       "      <td>WING CHAN</td>\n",
       "      <td>INCIDENT SUPPORT SPECIALIST</td>\n",
       "      <td>115455.44</td>\n",
       "      <td>104632.95</td>\n",
       "      <td>14776.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>234865.20</td>\n",
       "      <td>234865.20</td>\n",
       "      <td>2011</td>\n",
       "      <td>NaN</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Id         EmployeeName                            JobTitle  \\\n",
       "1            2         GARY JIMENEZ     CAPTAIN III (POLICE DEPARTMENT)   \n",
       "36159    36160       Gary Altenberg        Lieutenant, Fire Suppression   \n",
       "72964    72965        Whitney P Yee                      Deputy Sheriff   \n",
       "36163    36164    Frederick Binkley           EMT/Paramedic/Firefighter   \n",
       "110574  110575   Antonio B Santiago                      Deputy Sheriff   \n",
       "110577  110578        Barry J Bloom                      Deputy Sheriff   \n",
       "110583  110584        Whitney P Yee                      Deputy Sheriff   \n",
       "72943    72944     Gary L Altenberg        Lieutenant, Fire Suppression   \n",
       "36199    36200       Scott Scholzen                         Firefighter   \n",
       "73021    73022        Barry J Bloom                      Deputy Sheriff   \n",
       "110652  110653   Kristian C Dejesus                      Deputy Sheriff   \n",
       "36161    36162           Khoa Trinh         Electronic Maintenance Tech   \n",
       "110582  110583            Jay K Lee                         Firefighter   \n",
       "36221    36222            Alvin Lau                         Firefighter   \n",
       "35          36           KHOA TRINH   ELECTRONIC MAINTENANCE TECHNICIAN   \n",
       "36347    36348  Evette Geer-Stevens                  Transit Supervisor   \n",
       "73018    73019     Ernest L Johnson                         Firefighter   \n",
       "88          89  EVETTE GEER-STEVENS                  TRANSIT SUPERVISOR   \n",
       "110593  110594      Romelia C Scott                         Firefighter   \n",
       "36206    36207    Gregory Stangland           EMT/Paramedic/Firefighter   \n",
       "36312    36313       Ernest Johnson                         Firefighter   \n",
       "72973    72974   Frederick  Binkley           EMT/Paramedic/Firefighter   \n",
       "72927    72928          Samson  Lai      Battalion Chief, Fire Suppress   \n",
       "36238    36239       Martin Beltran                         Firefighter   \n",
       "36365    36366          Harold Byrd                  Transit Supervisor   \n",
       "110539  110540           Samson Lai      Battalion Chief, Fire Suppress   \n",
       "110608  110609        Terence E Woo                         Firefighter   \n",
       "72988    72989       Oscar  Cabrera           EMT/Paramedic/Firefighter   \n",
       "103        104        EDWARD DENNIS                  TRANSIT SUPERVISOR   \n",
       "124        125       TYRONNE JULIAN                  TRANSIT SUPERVISOR   \n",
       "...        ...                  ...                                 ...   \n",
       "166        167        THOMAS ALDANA                  TRANSIT SUPERVISOR   \n",
       "160        161          HAROLD BYRD                  TRANSIT SUPERVISOR   \n",
       "36242    36243       Douglas Spikes           EMT/Paramedic/Firefighter   \n",
       "72978    72979      Terry W Smerdel           Captain, Fire Suppression   \n",
       "36287    36288        Todd Plunkett                         Firefighter   \n",
       "36245    36246           Edward Chu        Lieutenant, Fire Suppression   \n",
       "111336  111337      Young V Laolagi              Track Maint Wrk Sprv 1   \n",
       "110890  110891   Suzette F Humphrey                      Deputy Sheriff   \n",
       "36302    36303          Johnson You                         Firefighter   \n",
       "110712  110713       Malcolm S Fong                    Police Officer 3   \n",
       "36239    36240       Robert Winslow        Lieutenant, Fire Suppression   \n",
       "110666  110667       Matthew G Lane           EMT/Paramedic/Firefighter   \n",
       "36316    36317   Gregory Cacharelis                         Firefighter   \n",
       "36271    36272          Guy Goodwin           EMT/Paramedic/Firefighter   \n",
       "110618  110619         Edward Y Chu        Lieutenant, Fire Suppression   \n",
       "273        274   FERDINAND CADELINA                  TRANSIT SUPERVISOR   \n",
       "111757  111758      Mike B Carrasco              Track Maint Wrk Sprv 1   \n",
       "73544    73545   Kristian C DeJesus                      Deputy Sheriff   \n",
       "73778    73779        Harold D Byrd                  Transit Supervisor   \n",
       "386        387      RICHARD ELLIOTT  ELECTRICAL TRANSIT SYSTEM MECHANIC   \n",
       "110724  110725          Neal Jaymes                         Firefighter   \n",
       "36751    36752        Edward Dennis                  Transit Supervisor   \n",
       "73054    73055        Alan L Harvey                         Firefighter   \n",
       "2            3       ALBERT PARDINI     CAPTAIN III (POLICE DEPARTMENT)   \n",
       "427        428         MARK SENORES  ELECTRICAL TRANSIT SYSTEM MECHANIC   \n",
       "36656    36657        Charles Scott                  Transit Supervisor   \n",
       "58          59         DOUGLAS RIBA         INCIDENT SUPPORT SPECIALIST   \n",
       "73010    73011       Robert J Lopez        Lieutenant, Fire Suppression   \n",
       "73471    73472   Antonio B Santiago                      Deputy Sheriff   \n",
       "69          70            WING CHAN         INCIDENT SUPPORT SPECIALIST   \n",
       "\n",
       "          BasePay  OvertimePay OtherPay Benefits   TotalPay  TotalPayBenefits  \\\n",
       "1       155966.02    245131.88   137811      NaN  538909.28         538909.28   \n",
       "36159   128808.87    220909.48  13126.3  44430.1  362844.66         407274.78   \n",
       "72964    95123.00    196689.18  16622.7  36125.5  308434.84         344560.33   \n",
       "36163   126863.19    192424.49  17917.2  44438.2  337204.86         381643.11   \n",
       "110574   94191.04    173547.73  19740.8  38238.6  287479.58         325718.15   \n",
       "110577   94191.13    173178.23  17960.1  38171.5  285329.47         323500.96   \n",
       "110583   94191.00    169659.92  16813.5  38311.1  280664.38         318975.45   \n",
       "72943   135903.02    163477.81    20995  46030.8  320375.79         366406.55   \n",
       "36199   109783.86    160418.47  19873.8  41230.9  290076.13         331307.02   \n",
       "73021    95123.08    156077.49  17018.2  35837.9  268218.79         304056.70   \n",
       "110652   93475.61    148147.92    13499  37450.5  255122.55         292573.09   \n",
       "36161   111921.00    146415.32  78057.4  53102.3  336393.73         389496.02   \n",
       "110582  111640.49    145867.35  18987.6  42998.8  276495.41         319494.22   \n",
       "36221   110847.13    139260.09  17844.2  40823.2  267951.41         308774.60   \n",
       "35      101953.20    139102.95  16483.9      NaN  257540.09         257540.09   \n",
       "36347    88400.70    137462.80     4212  41172.5  230075.50         271247.98   \n",
       "73018   109390.44    136843.65  20188.9  39131.7  266423.00         305554.70   \n",
       "88       88062.00    135159.38   7018.6      NaN  230239.98         230239.98   \n",
       "110593  112703.73    134077.58    23627    43240  270408.27         313648.31   \n",
       "36206   128091.78    133645.42  16130.2  43913.3  277867.44         321780.77   \n",
       "36312   103226.60    133355.19  16317.6  24733.1  252899.42         277632.53   \n",
       "72973   135144.28    132615.09  18656.9  45326.8  286416.23         331743.01   \n",
       "72927   186236.42    131217.63  29648.3  57064.9  347102.32         404167.27   \n",
       "36238   109783.87    130268.39  19688.1  39980.8  259740.36         299721.20   \n",
       "36365    88062.00    129414.28  9038.21  41733.1  226514.49         268247.55   \n",
       "110539  179464.14    128685.99  27334.8  59876.9  335484.96         395361.86   \n",
       "110608  111640.48    127698.35  21604.8  43610.4  260943.62         304554.04   \n",
       "72988   135144.27    127620.50  13695.5  44513.9  276460.27         320974.21   \n",
       "103      88400.70    126778.88  7228.67      NaN  222408.25         222408.25   \n",
       "124      88062.00    126725.82  2784.61      NaN  217572.43         217572.43   \n",
       "...           ...          ...      ...      ...        ...               ...   \n",
       "166      90094.20    111323.49  8344.75      NaN  209762.44         209762.44   \n",
       "160      88062.00    111199.78  11373.6      NaN  210635.36         210635.36   \n",
       "36242   128091.81    110423.84  16011.5  43394.9  254527.20         297922.12   \n",
       "72978   155174.51    110300.99  12004.3  48172.5  277479.82         325652.30   \n",
       "36287   110847.12    110253.41  19124.5    40910  240225.04         281135.04   \n",
       "36245   127933.79    110241.31    15563  42506.5  253738.12         296244.65   \n",
       "111336   89663.01    110139.58  6581.37  34873.5  206383.96         241257.42   \n",
       "110890   94191.00    110046.42  18959.1  39011.3  223196.56         262207.83   \n",
       "36302   110847.12    109506.20  18855.8  40725.5  239209.15         279934.69   \n",
       "110712  118898.14    109310.13  12557.9  39456.6  240766.21         280222.76   \n",
       "36239   127573.44    108989.99  22025.5  40696.9  258588.89         299285.84   \n",
       "110666  128578.98    108951.80  7714.76  45178.2  245245.54         290423.75   \n",
       "36316   109783.87    108781.84  18752.9  39811.8  237318.60         277130.42   \n",
       "36271   126863.18    108598.97  8835.86  42099.9  244298.01         286397.95   \n",
       "110618  129817.24    108123.01  16979.3  46748.4  254919.54         301667.93   \n",
       "273      88400.70    107913.65  2713.83      NaN  199028.18         199028.18   \n",
       "111757   89663.00    107841.55        0  33448.9  197504.55         230953.41   \n",
       "73544    95119.50    107572.21    13764  35234.2  216455.69         251689.88   \n",
       "73778    91449.00    107053.18  8924.07  33653.7  207426.25         241079.93   \n",
       "386      77580.40    106701.58  7859.19      NaN  192141.17         192141.17   \n",
       "110724  112703.75    106596.14  15634.9  43283.2  234934.78         278217.98   \n",
       "36751    87723.30    106319.68  6460.99  40949.2  200503.97         241453.13   \n",
       "73054   116956.72    106220.10  28071.7  43336.1  251248.55         294584.64   \n",
       "2       212739.13    106088.18  16452.6      NaN  335279.91         335279.91   \n",
       "427      76298.77    105953.61  6962.09      NaN  189214.47         189214.47   \n",
       "36656    88739.40    105674.81  9170.46  41776.8  203584.67         245361.42   \n",
       "58      115381.02    105028.94  19016.4      NaN  239426.36         239426.36   \n",
       "73010   135377.77    105011.07  25814.2  42960.5  266203.05         309163.56   \n",
       "73471    95123.00    104672.83  18980.1  36017.4  218775.91         254793.35   \n",
       "69      115455.44    104632.95  14776.8      NaN  234865.20         234865.20   \n",
       "\n",
       "        Year  Notes         Agency Status  \n",
       "1       2011    NaN  San Francisco    NaN  \n",
       "36159   2012    NaN  San Francisco    NaN  \n",
       "72964   2013    NaN  San Francisco    NaN  \n",
       "36163   2012    NaN  San Francisco    NaN  \n",
       "110574  2014    NaN  San Francisco     FT  \n",
       "110577  2014    NaN  San Francisco     FT  \n",
       "110583  2014    NaN  San Francisco     FT  \n",
       "72943   2013    NaN  San Francisco    NaN  \n",
       "36199   2012    NaN  San Francisco    NaN  \n",
       "73021   2013    NaN  San Francisco    NaN  \n",
       "110652  2014    NaN  San Francisco     FT  \n",
       "36161   2012    NaN  San Francisco    NaN  \n",
       "110582  2014    NaN  San Francisco     FT  \n",
       "36221   2012    NaN  San Francisco    NaN  \n",
       "35      2011    NaN  San Francisco    NaN  \n",
       "36347   2012    NaN  San Francisco    NaN  \n",
       "73018   2013    NaN  San Francisco    NaN  \n",
       "88      2011    NaN  San Francisco    NaN  \n",
       "110593  2014    NaN  San Francisco     FT  \n",
       "36206   2012    NaN  San Francisco    NaN  \n",
       "36312   2012    NaN  San Francisco    NaN  \n",
       "72973   2013    NaN  San Francisco    NaN  \n",
       "72927   2013    NaN  San Francisco    NaN  \n",
       "36238   2012    NaN  San Francisco    NaN  \n",
       "36365   2012    NaN  San Francisco    NaN  \n",
       "110539  2014    NaN  San Francisco     FT  \n",
       "110608  2014    NaN  San Francisco     FT  \n",
       "72988   2013    NaN  San Francisco    NaN  \n",
       "103     2011    NaN  San Francisco    NaN  \n",
       "124     2011    NaN  San Francisco    NaN  \n",
       "...      ...    ...            ...    ...  \n",
       "166     2011    NaN  San Francisco    NaN  \n",
       "160     2011    NaN  San Francisco    NaN  \n",
       "36242   2012    NaN  San Francisco    NaN  \n",
       "72978   2013    NaN  San Francisco    NaN  \n",
       "36287   2012    NaN  San Francisco    NaN  \n",
       "36245   2012    NaN  San Francisco    NaN  \n",
       "111336  2014    NaN  San Francisco     FT  \n",
       "110890  2014    NaN  San Francisco     FT  \n",
       "36302   2012    NaN  San Francisco    NaN  \n",
       "110712  2014    NaN  San Francisco     FT  \n",
       "36239   2012    NaN  San Francisco    NaN  \n",
       "110666  2014    NaN  San Francisco     FT  \n",
       "36316   2012    NaN  San Francisco    NaN  \n",
       "36271   2012    NaN  San Francisco    NaN  \n",
       "110618  2014    NaN  San Francisco     FT  \n",
       "273     2011    NaN  San Francisco    NaN  \n",
       "111757  2014    NaN  San Francisco     FT  \n",
       "73544   2013    NaN  San Francisco    NaN  \n",
       "73778   2013    NaN  San Francisco    NaN  \n",
       "386     2011    NaN  San Francisco    NaN  \n",
       "110724  2014    NaN  San Francisco     FT  \n",
       "36751   2012    NaN  San Francisco    NaN  \n",
       "73054   2013    NaN  San Francisco    NaN  \n",
       "2       2011    NaN  San Francisco    NaN  \n",
       "427     2011    NaN  San Francisco    NaN  \n",
       "36656   2012    NaN  San Francisco    NaN  \n",
       "58      2011    NaN  San Francisco    NaN  \n",
       "73010   2013    NaN  San Francisco    NaN  \n",
       "73471   2013    NaN  San Francisco    NaN  \n",
       "69      2011    NaN  San Francisco    NaN  \n",
       "\n",
       "[100 rows x 13 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "    #What are the top 100 employees with highest  OvertimePay ?\n",
    "    train_df['OvertimePay'] = pd.to_numeric(train_df['OvertimePay'], errors='coerce')\n",
    "    train_df = train_df.dropna(subset=['OvertimePay'])\n",
    "    train_df['OvertimePay'].astype(int)\n",
    "    Open_s = train_df.sort_values(by = ['OvertimePay'], ascending=False)\n",
    "    Open_s.head(100)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\z003uxkr\\AppData\\Local\\Continuum\\anaconda3version\\lib\\site-packages\\scipy\\stats\\stats.py:1713: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.\n",
      "  return np.add.reduce(sorted[indexer] * weights, axis=axis) / sumval\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Histogram plot of employees with Overtimepay\n",
    "plt.figure(figsize = (13, 6))\n",
    "plt.subplot(1,2,1)\n",
    "sns.distplot(train_df.BasePay,bins=10,color = 'r')\n",
    "plt.subplot(1,2,2)\n",
    "sns.distplot(train_df.OvertimePay, bins=20,color = 'b')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The output of the first five predicted values are: [2012.52325452 2012.52325452 2012.52323429 2012.52292724 2012.52325452]\n"
     ]
    }
   ],
   "source": [
    "#Model Preparing\n",
    "X = train_df.iloc[:, -8:-7].values\n",
    "y = train_df.iloc[:, 9].values\n",
    "#Split the Dataset to train and test\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)\n",
    "#Fitting LinearRegression to Training Set\n",
    "linear = LinearRegression()\n",
    "linear.fit(X_train, y_train)\n",
    "#predicting with Test Set\n",
    "z = linear.predict(X_train)\n",
    "print(\"The output of the first five predicted values are:\", z[0:5])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The output of the first five predicted values are: [-9.28857345e-12 -2.00682775e-12 -2.43698712e-11 -8.88486612e-12\n",
      " -9.84753719e-12]\n"
     ]
    }
   ],
   "source": [
    "import sklearn as sk\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "from scipy.stats import norm\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.model_selection import cross_val_predict\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.model_selection import StratifiedKFold\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.linear_model import LinearRegression\n",
    "import pandas as pd\n",
    "train_df = pd.read_csv(\"monthly_salary_brazil.csv\")\n",
    "from sklearn.metrics import mean_squared_error\n",
    "X = train_df.iloc[:, -7:-1].values\n",
    "y = train_df.iloc[:, 8].values\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)\n",
    "linear = LinearRegression()\n",
    "linear.fit(X_train, y_train)\n",
    "v = linear.predict(X_test)\n",
    "print(\"The output of the first five predicted values are:\", v[0:5])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R^2:1.0\n",
      "Root Mean Squared Error:4.5938862245222605e-10\n"
     ]
    }
   ],
   "source": [
    "print(\"R^2:{}\".format(linear.score(X_test,y_test)))\n",
    "rmse=np.sqrt(mean_squared_error(y_test,v))\n",
    "print(\"Root Mean Squared Error:{}\".format(rmse))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The output of the first five predicted values are: [-2.03606021e-11 -2.03606021e-11 -2.03606021e-11 -2.03606021e-11\n",
      " -2.03606021e-11]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "import pandas as pd\n",
    "train_df = pd.read_csv(\"monthly_salary_brazil.csv\")\n",
    "from sklearn.metrics import mean_squared_error\n",
    "X = train_df.iloc[:, -5:-4].values\n",
    "y = train_df.iloc[:, 6].values\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)\n",
    "linear = LinearRegression()\n",
    "linear.fit(X_train, y_train)\n",
    "s = linear.predict(X_test)\n",
    "print(\"The output of the first five predicted values are:\", s[0:5])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R^2:1.0\n",
      "Root Mean Squared Error:8.388686776361145e-10\n"
     ]
    }
   ],
   "source": [
    "print(\"R^2:{}\".format(linear.score(X_test,y_test)))\n",
    "rmse=np.sqrt(mean_squared_error(y_test,s))\n",
    "print(\"Root Mean Squared Error:{}\".format(rmse))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "import pandas as pd\n",
    "train_df = pd.read_csv(\"monthly_salary_brazil.csv\")\n",
    "from sklearn.metrics import mean_squared_error\n",
    "X = train_df.iloc[:, -5:-4].values\n",
    "y = train_df.iloc[:, 6].values\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)\n",
    "linear = LinearRegression()\n",
    "linear.fit(X_train, y_train)\n",
    "plt.scatter(X_train,y_train,color=\"red\")\n",
    "plt.plot(X_train,linear.predict(X_train),color=\"green\")\n",
    "plt.title(\"OtherPay vs features(Training set)\")\n",
    "plt.xlabel(\"features\")\n",
    "plt.xlabel(\"OtherPay\")\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
